//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ajuna.SDK.Demos.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec;
   using Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_contracts.wasm;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_contracts.storage;
   using Ajuna.SDK.Demos.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class ContractsControllerMockupClient : MockupBaseClient, IContractsControllerMockupClient
   {
      private HttpClient _httpClient;
      public ContractsControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetPristineCode(BoundedVecT17 value, Ajuna.SDK.Demos.NetApi.Generated.Model.primitive_types.H256 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Contracts/PristineCode", value.Encode(), Ajuna.SDK.Demos.NetApi.Generated.Storage.ContractsStorage.PristineCodeParams(key));
      }
      public async Task<bool> SetCodeStorage(PrefabWasmModule value, Ajuna.SDK.Demos.NetApi.Generated.Model.primitive_types.H256 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Contracts/CodeStorage", value.Encode(), Ajuna.SDK.Demos.NetApi.Generated.Storage.ContractsStorage.CodeStorageParams(key));
      }
      public async Task<bool> SetOwnerInfoOf(OwnerInfo value, Ajuna.SDK.Demos.NetApi.Generated.Model.primitive_types.H256 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Contracts/OwnerInfoOf", value.Encode(), Ajuna.SDK.Demos.NetApi.Generated.Storage.ContractsStorage.OwnerInfoOfParams(key));
      }
      public async Task<bool> SetNonce(U64 value)
      {
         return await SendMockupRequestAsync(_httpClient, "Contracts/Nonce", value.Encode(), Ajuna.SDK.Demos.NetApi.Generated.Storage.ContractsStorage.NonceParams());
      }
      public async Task<bool> SetContractInfoOf(RawContractInfo value, Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Contracts/ContractInfoOf", value.Encode(), Ajuna.SDK.Demos.NetApi.Generated.Storage.ContractsStorage.ContractInfoOfParams(key));
      }
      public async Task<bool> SetDeletionQueue(BoundedVecT20 value)
      {
         return await SendMockupRequestAsync(_httpClient, "Contracts/DeletionQueue", value.Encode(), Ajuna.SDK.Demos.NetApi.Generated.Storage.ContractsStorage.DeletionQueueParams());
      }
   }
}
