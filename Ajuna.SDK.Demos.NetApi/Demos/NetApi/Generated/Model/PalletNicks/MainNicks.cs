//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi;
using Ajuna.NetApi.Model.Extrinsics;
using Ajuna.NetApi.Model.Meta;
using Ajuna.NetApi.Model.Types;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport;
using Ajuna.SDK.Demos.NetApi.Generated.Model.SpCore;
using Ajuna.SDK.Demos.NetApi.Generated.Model.SpRuntime;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Ajuna.SDK.Demos.NetApi.Generated.Model.PalletNicks
{
    
    
    public sealed class NicksStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public NicksStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nicks", "NameOf"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Ajuna.SDK.Demos.NetApi.Generated.Model.SpCore.AccountId32), typeof(BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport.BoundedVecT4,Ajuna.NetApi.Model.Types.Primitive.U128>)));
        }
        
        /// <summary>
        /// >> NameOfParams
        ///  The lookup table for names.
        /// </summary>
        public static string NameOfParams(Ajuna.SDK.Demos.NetApi.Generated.Model.SpCore.AccountId32 key)
        {
            return RequestGenerator.GetStorage("Nicks", "NameOf", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> NameOf
        ///  The lookup table for names.
        /// </summary>
        public async Task<BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport.BoundedVecT4,Ajuna.NetApi.Model.Types.Primitive.U128>> NameOf(Ajuna.SDK.Demos.NetApi.Generated.Model.SpCore.AccountId32 key, CancellationToken token)
        {
            string parameters = NicksStorage.NameOfParams(key);
            return await _client.GetStorageAsync<BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport.BoundedVecT4,Ajuna.NetApi.Model.Types.Primitive.U128>>(parameters, token);
        }
    }
    
    public sealed class NicksCalls
    {
        
        /// <summary>
        /// >> set_name
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method SetName(BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> name)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(name.Encode());
            return new Method(9, "Nicks", 0, "set_name", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> clear_name
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method ClearName()
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            return new Method(9, "Nicks", 1, "clear_name", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> kill_name
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method KillName(Ajuna.SDK.Demos.NetApi.Generated.Model.SpRuntime.EnumMultiAddress target)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(target.Encode());
            return new Method(9, "Nicks", 2, "kill_name", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_name
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method ForceName(Ajuna.SDK.Demos.NetApi.Generated.Model.SpRuntime.EnumMultiAddress target, BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> name)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(target.Encode());
            byteArray.AddRange(name.Encode());
            return new Method(9, "Nicks", 3, "force_name", byteArray.ToArray());
        }
    }
    
    public enum NicksErrors
    {
        
        /// <summary>
        /// >> TooShort
        /// A name is too short.
        /// </summary>
        TooShort,
        
        /// <summary>
        /// >> TooLong
        /// A name is too long.
        /// </summary>
        TooLong,
        
        /// <summary>
        /// >> Unnamed
        /// An account isn't named.
        /// </summary>
        Unnamed,
    }
}
