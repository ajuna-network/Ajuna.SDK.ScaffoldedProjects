//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport;
using Ajuna.SDK.Demos.NetApi.Generated.Model.SpCore;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Ajuna.SDK.Demos.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// INicksStorage interface definition.
    /// </summary>
    public interface INicksStorage : IStorage
    {
        
        /// <summary>
        /// >> NameOf
        ///  The lookup table for names.
        /// </summary>
        BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport.BoundedVecT4,Ajuna.NetApi.Model.Types.Primitive.U128> GetNameOf(string key);
    }
    
    /// <summary>
    /// NicksStorage class definition.
    /// </summary>
    public sealed class NicksStorage : INicksStorage
    {
        
        /// <summary>
        /// _nameOfTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport.BoundedVecT4,Ajuna.NetApi.Model.Types.Primitive.U128>> _nameOfTypedStorage;
        
        /// <summary>
        /// NicksStorage constructor.
        /// </summary>
        public NicksStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.NameOfTypedStorage = new TypedMapStorage<BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport.BoundedVecT4,Ajuna.NetApi.Model.Types.Primitive.U128>>("Nicks.NameOf", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _nameOfTypedStorage property
        /// </summary>
        public TypedMapStorage<BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport.BoundedVecT4,Ajuna.NetApi.Model.Types.Primitive.U128>> NameOfTypedStorage
        {
            get
            {
                return _nameOfTypedStorage;
            }
            set
            {
                _nameOfTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Ajuna.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await NameOfTypedStorage.InitializeAsync("Nicks", "NameOf");
        }
        
        /// <summary>
        /// Implements any storage change for Nicks.NameOf
        /// </summary>
        [StorageChange("Nicks", "NameOf")]
        public void OnUpdateNameOf(string key, string data)
        {
            NameOfTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> NameOf
        ///  The lookup table for names.
        /// </summary>
        public BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport.BoundedVecT4,Ajuna.NetApi.Model.Types.Primitive.U128> GetNameOf(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (NameOfTypedStorage.Dictionary.TryGetValue(key, out BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.FrameSupport.BoundedVecT4,Ajuna.NetApi.Model.Types.Primitive.U128> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
