//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ajuna.SDK.Demos.RestClient.Test.Generated
{
   using System;
   using NUnit.Framework;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Ajuna.SDK.Demos.RestClient.Mockup.Generated.Clients;
   using Ajuna.SDK.Demos.RestClient.Generated.Clients;
   using Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote;
   using Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec;
   
   public class ConvictionVotingControllerClientTest : ClientTestBase
   {
      private System.Net.Http.HttpClient _httpClient;
      [SetUp()]
      public void Setup()
      {
         _httpClient = CreateHttpClient();
      }
      public Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumVoting GetTestValue2()
      {
         Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumVoting result;
         result = new Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumVoting();
         result.Create(this.GetTestValueEnum<Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.Voting>(), this.GetTestValue3());
         return result;
      }
      public Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.Casting GetTestValue3()
      {
         Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.Casting result;
         result = new Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.Casting();
         result.Votes = new Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT36();
         result.Votes = this.GetTestValue4();
         result.Delegations = new Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.types.Delegations();
         result.Delegations = this.GetTestValue9();
         result.Prior = new Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.PriorLock();
         result.Prior = this.GetTestValue10();
         return result;
      }
      public Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT36 GetTestValue4()
      {
         Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT36 result;
         result = new Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT36();
         result.Value = new Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumAccountVote>>();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumAccountVote>[] {
                  this.GetTestValue5()});
         return result;
      }
      public Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumAccountVote> GetTestValue5()
      {
         Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumAccountVote> result;
         result = new Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumAccountVote>();
         result.Create(this.GetTestValueU32(), this.GetTestValue6());
         return result;
      }
      public Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumAccountVote GetTestValue6()
      {
         Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumAccountVote result;
         result = new Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumAccountVote();
         result.Create(this.GetTestValueEnum<Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.AccountVote>(), this.GetTestValue7());
         return result;
      }
      public Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.Vote, Ajuna.NetApi.Model.Types.Primitive.U128> GetTestValue7()
      {
         Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.Vote, Ajuna.NetApi.Model.Types.Primitive.U128> result;
         result = new Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.Vote, Ajuna.NetApi.Model.Types.Primitive.U128>();
         result.Create(this.GetTestValue8(), this.GetTestValueU128());
         return result;
      }
      public Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.Vote GetTestValue8()
      {
         Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.Vote result;
         result = new Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.Vote();
         result.Value = this.GetTestValueU8();
         return result;
      }
      public Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.types.Delegations GetTestValue9()
      {
         Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.types.Delegations result;
         result = new Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.types.Delegations();
         result.Votes = this.GetTestValueU128();
         result.Capital = this.GetTestValueU128();
         return result;
      }
      public Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.PriorLock GetTestValue10()
      {
         Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.PriorLock result;
         result = new Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.PriorLock();
         result.BlockNumber = this.GetTestValueU32();
         result.Balance = this.GetTestValueU128();
         return result;
      }
      public Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32, Ajuna.NetApi.Model.Types.Primitive.U16> GetTestValue11()
      {
         Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32, Ajuna.NetApi.Model.Types.Primitive.U16> result;
         result = new Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32, Ajuna.NetApi.Model.Types.Primitive.U16>();
         result.Create(this.GetTestValue12(), this.GetTestValueU16());
         return result;
      }
      public Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32 GetTestValue12()
      {
         Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32 result;
         result = new Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32();
         result.Value = new Ajuna.SDK.Demos.NetApi.Generated.Types.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestVotingFor()
      {
         // Construct new Mockup client to test with.
         ConvictionVotingControllerMockupClient mockupClient = new ConvictionVotingControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         ConvictionVotingControllerClient rpcClient = new ConvictionVotingControllerClient(_httpClient, subscriptionClient);
         Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumVoting mockupValue = this.GetTestValue2();
         Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32, Ajuna.NetApi.Model.Types.Primitive.U16> mockupKey = this.GetTestValue11();

         Assert.IsTrue(await rpcClient.SubscribeVotingFor(mockupKey));

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetVotingFor(mockupValue, mockupKey);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Ajuna.SDK.Demos.NetApi.Generated.Model.pallet_conviction_voting.vote.EnumVoting rpcResult = await rpcClient.GetVotingFor(mockupKey);

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
      public Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT37 GetTestValue14()
      {
         Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT37 result;
         result = new Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT37();
         result.Value = new Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U16, Ajuna.NetApi.Model.Types.Primitive.U128>>();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U16, Ajuna.NetApi.Model.Types.Primitive.U128>[] {
                  this.GetTestValue15()});
         return result;
      }
      public Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U16, Ajuna.NetApi.Model.Types.Primitive.U128> GetTestValue15()
      {
         Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U16, Ajuna.NetApi.Model.Types.Primitive.U128> result;
         result = new Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U16, Ajuna.NetApi.Model.Types.Primitive.U128>();
         result.Create(this.GetTestValueU16(), this.GetTestValueU128());
         return result;
      }
      public Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32 GetTestValue16()
      {
         Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32 result;
         result = new Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32();
         result.Value = new Ajuna.SDK.Demos.NetApi.Generated.Types.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestClassLocksFor()
      {
         // Construct new Mockup client to test with.
         ConvictionVotingControllerMockupClient mockupClient = new ConvictionVotingControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         ConvictionVotingControllerClient rpcClient = new ConvictionVotingControllerClient(_httpClient, subscriptionClient);
         Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT37 mockupValue = this.GetTestValue14();
         Ajuna.SDK.Demos.NetApi.Generated.Model.sp_core.crypto.AccountId32 mockupKey = this.GetTestValue16();

         Assert.IsTrue(await rpcClient.SubscribeClassLocksFor(mockupKey));

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetClassLocksFor(mockupValue, mockupKey);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Ajuna.SDK.Demos.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT37 rpcResult = await rpcClient.GetClassLocksFor(mockupKey);

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
   }
}
